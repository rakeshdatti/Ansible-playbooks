- name: disabling the node js
  ansible.builtin.command:  dnf module disable nodejs -y

- name: disabling the node js
  ansible.builtin.command:  dnf module enable nodejs:20 -y

- name: install node js
  ansible.builtin.package:
    name: nodejs
    state: present
- name: add application user 
  ansible.builtin.user:
    name: expense 
    state: present

- name: create a directory
  ansible.builtin.file:
    name: /app 
    state: directory
- name: download  the code using url 
  ansible.builtin.get_url:
    url:  https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
    dest: /tmp/backend.zip

- name: unzip the code 
  ansible.builtin.unarchive:
    src: /tmp/backend.zip
    dest: /app 
    remote_src: yes

- name: install required lib 
  community.general.npm:
    path: /app 
    state: present

- name: copy the backend sevice file 
  ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service

- name: install mysql client 
  ansible.builtin.package:
    name: mysql 
    state: present

- name: install python package
  ansible.builtin.pip:
    name: "{{ item }}"
    state: present
  loop:
    - PyMySQL
    - cryptography
- name: import mysqldata
  community.mysql.mysql_db:
    state: import
    name: all
    login_user: root 
    login_password: ExpenseApp@01
    login_host: mysql.rproject.live
    target: /app/schema/backend.sql

- name: demon and reload the backend 
  ansible.builtin.systemd_service:
    enabled: yes
    state: restarted 
    daemon_reload: true
    name: backend.service
